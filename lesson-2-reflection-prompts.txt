What happens when you initialize a repository? Why do you need to do it?
	Git creates the files needed to track the repository elements. You need to do it
	because otherwise you have only a directory, not a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is the unique entryway to the repository from the working directory. 
	It makes clear exactly which files are grouped together in a commmit.

How can you use the staging area to make sure you have one commit per logical
change?
	When you make a logical change, add the relevant files to the staging area
	and commit them.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches could help when you think of two or more ways to accomplish a coding goal.
	I can label branches to make it clear which is which, and I can see exactly where
	these branches diverged from the main project.

How do the diagrams help you visualize the branch structure?
	They let you see the order of commits and see where each branch diverges
	from the main one or from other branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
